head	1.7;
access;
symbols
	VersionKernel2-4:1.4;
locks; strict;
comment	@ * @;


1.7
date	2008.12.04.15.52.29;	author nmn;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.21.15.02.58;	author sdeghaye;	state Exp;
branches;
next	1.5;

1.5
date	2005.06.29.07.57.44;	author sdeghaye;	state Exp;
branches;
next	1.4;

1.4
date	2005.02.15.14.08.38;	author ygeorgie;	state Exp;
branches;
next	1.3;

1.3
date	2004.10.13.06.37.02;	author sdeghaye;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.16.14.10.27;	author sdeghaye;	state Released;
branches;
next	1.1;

1.1
date	2004.03.09.13.00.03;	author sdeghaye;	state Exp;
branches;
next	;


desc
@Header file of the Pickering Mux Driver
@


1.7
log
@Compile for L865
@
text
@/* $Id: pickeringmuxdrv.h,v 1.6 2006/03/21 15:02:58 sdeghaye Exp nmn $ */
#ifndef PICKERINGMUXDRV_H
#define PICKERINGMUXDRV_H

#define PICKERINGMUX_DIR_NAME "pickeringmux"
#define PICKERINGMUX_FILE_TEMPLATE PICKERINGMUX_DIR_NAME"/slot%d-%d"
#define PICKERINGMUX_PATH_TEMPLATE "/dev/"PICKERINGMUX_FILE_TEMPLATE

#define MAX_SLOT 32 /* Max 32 slots a PCI bus*/
#define MAX_BUS   4 /* Max 4 PCI buses supported */

/* IOCTL commands */
#include <linux/ioctl.h>
#define PICKERINGMUX_MAGIC 'H' /* See Documentation/ioctl-number.h */
#define PICKERINGMUX_CONNECT    _IOW(PICKERINGMUX_MAGIC, 1, PickeringMuxConnectData)
#define PICKERINGMUX_DISCONNECT _IOW(PICKERINGMUX_MAGIC, 2, int)
#define PICKERINGMUX_RESET      _IO(PICKERINGMUX_MAGIC, 3)
#define PICKERINGMUX_MAXOUTPUT  _IOR(PICKERINGMUX_MAGIC, 4, int)
#define PICKERINGMUX_MAXINPUT   _IOR(PICKERINGMUX_MAGIC, 5, int)
#define PICKERINGMUX_STATUS     _IOR(PICKERINGMUX_MAGIC, 6, int)
#define PICKERINGMUX_WIDTH      _IOR(PICKERINGMUX_MAGIC, 7, int)
#define PICKERING_SET_ATTN      _IOR(PICKERINGMUX_MAGIC, 8, PickeringAttnData)

/* Data structure for the Connect */
typedef struct
{
  int input;
  int output;
} PickeringMuxConnectData;

/* Data structure for the SetAttn */
typedef struct
{
  int channel;
  int attn;
} PickeringAttnData;

/* This part of the header file is use in the driver only */
#ifdef __KERNEL__

#ifdef CONFIG_DEVFS_FS
#include <linux/devfs_fs_kernel.h>
#endif
#include <linux/cdev.h>

#define PICK_MUX_OE_SET 0x0010
#define PICK_MUX_CLK_PERIOD 1

#define PICK_MUX_CLK_POS 1
#define PICK_MUX_DATA_POS 2
#define PICK_MUX_STRB1_POS 3
#define PICK_MUX_STRB2_POS 5

/* Module descriptor */
typedef struct 
{
  unsigned long las0addr;
  int las0len;
  void *las0;
  unsigned long las1addr;
  int las1len;    
  void *las1;
  unsigned short type;
  unsigned char bus;	/* PCI bus number of the device */
  unsigned int device;	/* PCI device number of the device */
  int *inputs;	/* input number currently connected to the outputs */
  int *loopData; /* Data held by the mux registers (Serial architecture)*/
  struct cdev charDev; /* Char device structure */
  /* We probably need to add a semaphore here */ 
} PickeringMuxDescr;

/* Structure to store relay mapping of serial architecture */
/* A relay is identified by its index in the loops data */
typedef struct
{
  int yIsoRelay; /* This is the relay that isolates an entry from a 4*4 matrix (see doc).*/
  int yxRelay;   /* This is the relay in the 4*4 matrix that connects a X to a Y. */
  int xIsoRelay; /* This is the relay that isolates an output from a 4*4 matrix.*/
} RelayMap;

/* Prototype */
void pickeringMuxSendData(PickeringMuxDescr *muxDesc, int nbrLoop, int c);


#endif /* __KERNEL__ */

#endif
@


1.6
log
@Add attenuator type
@
text
@d1 1
a1 1
/* $Id: pickeringmuxdrv.h,v 1.5 2005/06/29 07:57:44 sdeghaye Exp $ */
d41 1
d43 1
@


1.5
log
@Version for the kernel 2.6.9
@
text
@d1 1
a1 1
/* $Id: pickeringmuxdrv.h,v 1.4 2005/02/15 14:08:38 ygeorgie Exp sdeghaye $ */
d22 1
d31 7
@


1.4
log
@MESSAGE: Now it's possible to obtain module width
@
text
@d1 1
a1 1
/* $Id: pickeringmuxdrv.h,v 1.3 2004/10/13 06:37:02 sdeghaye Exp ygeorgie $ */
d6 3
a8 1
#define PICKERINGMUX_FILE_NAME "slot"
d10 1
a10 1
#define MAX_FILENAME_LEN 10
d34 1
d54 2
a55 2
  int bus;	/* PCI bus number of the device */
  int device;	/* PCI device number of the device */
d58 1
a58 1
  devfs_handle_t file; /* DEVFS file handle for the device */
@


1.3
log
@Replace slot by bus, device.
@
text
@d1 1
a1 1
/* $Id: pickeringmuxdrv.h,v 1.2 2004/03/16 14:10:27 sdeghaye Released sdeghaye $ */
d19 1
@


1.2
log
@Driver & Library with support for the Pickering modules 4-1, 9-8 and 16-16.
First working version.
@
text
@d1 1
a1 1
/* $Id: pickeringmuxdrv.h,v 1.1 2004/03/09 13:00:03 sdeghaye Exp $ */
d50 2
a51 1
  int slot;	/* slot number of the device */
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* $Id: prfmuxdriver.h,v 1.2 2003/05/12 15:35:10 sdeghaye Exp $ */
d10 17
d32 8
d52 1
d54 1
d56 13
@
